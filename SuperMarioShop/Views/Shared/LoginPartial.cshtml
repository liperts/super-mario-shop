@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<IdentityUser> SignInManager

@* Using the SignInManager class we'll check if the user is sign in or not *@
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" id="logoutForm"
          method="post" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @* When he/she sign in we are displaying the Log off button *@
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @* When he/she is not loged in we are displaying the Register and the Log in buttons *@
        <li><a id="registerLink" asp-controller="Account" asp-action="Register"> Register </a></li>
        <li><a id="loginLink" asp-controller="Account" asp-action="Login"> Log in </a></li>
    </ul>
        }
